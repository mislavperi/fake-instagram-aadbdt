// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	models "github.com/mislavperi/fake-instagram-aadbdt/server/internal/infrastructure/psql/models"
	mock "github.com/stretchr/testify/mock"
)

// PlanLogServiceUpload is an autogenerated mock type for the PlanLogServiceUpload type
type PlanLogServiceUpload struct {
	mock.Mock
}

// GetUserPlan provides a mock function with given fields: userID
func (_m *PlanLogServiceUpload) GetUserPlan(userID int64) (*models.PlanLog, error) {
	ret := _m.Called(userID)

	var r0 *models.PlanLog
	var r1 error
	if rf, ok := ret.Get(0).(func(int64) (*models.PlanLog, error)); ok {
		return rf(userID)
	}
	if rf, ok := ret.Get(0).(func(int64) *models.PlanLog); ok {
		r0 = rf(userID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.PlanLog)
		}
	}

	if rf, ok := ret.Get(1).(func(int64) error); ok {
		r1 = rf(userID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewPlanLogServiceUpload interface {
	mock.TestingT
	Cleanup(func())
}

// NewPlanLogServiceUpload creates a new instance of PlanLogServiceUpload. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewPlanLogServiceUpload(t mockConstructorTestingTNewPlanLogServiceUpload) *PlanLogServiceUpload {
	mock := &PlanLogServiceUpload{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
