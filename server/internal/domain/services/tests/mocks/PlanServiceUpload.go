// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	models "github.com/mislavperi/fake-instagram-aadbdt/server/internal/domain/models"
	mock "github.com/stretchr/testify/mock"
)

// PlanServiceUpload is an autogenerated mock type for the PlanServiceUpload type
type PlanServiceUpload struct {
	mock.Mock
}

// GetPlanByID provides a mock function with given fields: planID
func (_m *PlanServiceUpload) GetPlanByID(planID int) (*models.Plan, error) {
	ret := _m.Called(planID)

	var r0 *models.Plan
	var r1 error
	if rf, ok := ret.Get(0).(func(int) (*models.Plan, error)); ok {
		return rf(planID)
	}
	if rf, ok := ret.Get(0).(func(int) *models.Plan); ok {
		r0 = rf(planID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.Plan)
		}
	}

	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(planID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewPlanServiceUpload interface {
	mock.TestingT
	Cleanup(func())
}

// NewPlanServiceUpload creates a new instance of PlanServiceUpload. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewPlanServiceUpload(t mockConstructorTestingTNewPlanServiceUpload) *PlanServiceUpload {
	mock := &PlanServiceUpload{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
