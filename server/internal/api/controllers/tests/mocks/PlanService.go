// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	models "github.com/mislavperi/fake-instagram-aadbdt/server/internal/domain/models"
	mock "github.com/stretchr/testify/mock"
)

// PlanService is an autogenerated mock type for the PlanService type
type PlanService struct {
	mock.Mock
}

// GetPlans provides a mock function with given fields:
func (_m *PlanService) GetPlans() ([]models.Plan, error) {
	ret := _m.Called()

	var r0 []models.Plan
	var r1 error
	if rf, ok := ret.Get(0).(func() ([]models.Plan, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() []models.Plan); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]models.Plan)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewPlanService interface {
	mock.TestingT
	Cleanup(func())
}

// NewPlanService creates a new instance of PlanService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewPlanService(t mockConstructorTestingTNewPlanService) *PlanService {
	mock := &PlanService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
